{"version":3,"sources":["ToDoItem.js","App.js","index.js"],"names":["ToDoItem","title","description","id","stillTodo","updateCallback","removeCallback","useState","done","setDone","className","onClick","console","log","App","tasks","setTasks","nextAvailId","setNextAvailId","newTaskTitle","setNewTaskTitle","newTaskDescription","setNewTaskDescription","showAllTasks","setShowAllTasks","updateDone","taskId","newDoneStatus","newTasks","find","task","isFinished","removeTask","filter","for","type","value","onChange","e","target","preventDefault","oldTasks","lastUsedId","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1ccc336.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nfunction ToDoItem({\n    title,\n    description,\n    id,\n    stillTodo,\n    updateCallback,\n    removeCallback,\n}) {\n    const [done, setDone] = useState(stillTodo);\n\n    function onFinishClick() {\n        setDone((done) => !done);\n        updateCallback(id, !done);\n        console.log(done);\n    }\n\n    function onRemoveCallback() {\n        removeCallback(id);\n    }\n\n    return (\n        <div className=\"p-5\">\n            <div className=\"rounded-md bg-white shadow-lg p-5\">\n                <h1 className=\"text-xl font-bold py-2\">{title}</h1>\n                <p className=\"py-2\">{description}</p>\n                <div className=\"flex justify-between\">\n                    <button className=\"py-2\" onClick={onRemoveCallback}>\n                        Remove Todo\n                    </button>\n                    <button onClick={onFinishClick}>\n                        {done ? \"Set Undone\" : \"Set Done\"}\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ToDoItem;\n","import ToDoItem from \"./ToDoItem\";\nimport { useState } from \"react\";\n\nfunction App() {\n    const [tasks, setTasks] = useState([]);\n    const [nextAvailId, setNextAvailId] = useState(0);\n    const [newTaskTitle, setNewTaskTitle] = useState(\"\");\n    const [newTaskDescription, setNewTaskDescription] = useState(\"\");\n    const [showAllTasks, setShowAllTasks] = useState(true);\n\n    function renderTasks() {\n        if (!showAllTasks) {\n            return tasks\n                .filter((task) => task.isFinished === false)\n                .map((task) => {\n                    return (\n                        <ToDoItem\n                            title={task.title}\n                            description={task.description}\n                            id={task.id}\n                            key={task.id}\n                            stillTodo={task.isFinished}\n                            updateCallback={updateDone}\n                            removeCallback={removeTask}\n                        />\n                    );\n                });\n        } else {\n            return tasks.map((task) => {\n                return (\n                    <ToDoItem\n                        title={task.title}\n                        description={task.description}\n                        id={task.id}\n                        key={task.id}\n                        stillTodo={task.isFinished}\n                        updateCallback={updateDone}\n                        removeCallback={removeTask}\n                    />\n                );\n            });\n        }\n    }\n\n    function handleShowUnfinishedTasksClick() {\n        setShowAllTasks(!showAllTasks);\n    }\n\n    function updateDone(taskId, newDoneStatus) {\n        console.log(\"I am being called\");\n        let newTasks = [...tasks];\n        let taskObj = newTasks.find((task) => task.id === taskId);\n        taskObj.isFinished = newDoneStatus;\n        setTasks(newTasks);\n    }\n\n    function removeTask(taskId) {\n        let newTasks = tasks.filter((task) => task.id !== taskId);\n\n        setTasks(newTasks);\n    }\n\n    function handleTitleChange(e) {\n        console.log(e.target.value);\n        setNewTaskTitle(e.target.value);\n    }\n\n    function handleDescriptionChange(e) {\n        console.log(e.target.value);\n        setNewTaskDescription(e.target.value);\n    }\n\n    function handleNewTaskSubmit(e) {\n        e.preventDefault();\n        setTasks((oldTasks) => [\n            ...oldTasks,\n            {\n                title: newTaskTitle,\n                description: newTaskDescription,\n                isFinished: false,\n                id: nextAvailId,\n            },\n        ]);\n        setNextAvailId((lastUsedId) => lastUsedId + 1);\n\n        setNewTaskTitle(\"\");\n        setNewTaskDescription(\"\");\n        console.log();\n    }\n\n    return (\n        <div className=\"bg-gray-100 grid grid-cols-2 min-h-screen\">\n            <div>\n                <div className=\"p-5\">\n                    <div className=\"rounded-md bg-white shadow-lg p-5 flex flex-col\">\n                        <h1 className=\"text-center text-2xl font-bold\">\n                            Add New Tasks Here:\n                        </h1>\n                        <form className=\"flex flex-col\">\n                            <div className=\"flex justify-end pt-2\">\n                                <label for=\"title\" className=\"p-2\">\n                                    Title:\n                                </label>\n                                <input\n                                    className=\"bg-gray-300 rounded-lg p-2\"\n                                    type=\"text\"\n                                    id=\"title\"\n                                    value={newTaskTitle}\n                                    onChange={handleTitleChange}\n                                />\n                            </div>\n                            <div className=\"flex justify-end py-2\">\n                                <label for=\"description\" className=\"p-2\">\n                                    Description:{\" \"}\n                                </label>\n                                <input\n                                    className=\"bg-gray-300 rounded-lg p-2\"\n                                    type=\"text\"\n                                    id=\"description\"\n                                    value={newTaskDescription}\n                                    onChange={handleDescriptionChange}\n                                />\n                            </div>\n                            <input\n                                type=\"submit\"\n                                className=\"py-2 rounded-lg justify-self-center\"\n                                onClick={handleNewTaskSubmit}\n                            />\n                        </form>\n                        <div className=\"flex flex-col py-3\">\n                            <button\n                                onClick={handleShowUnfinishedTasksClick}\n                                className=\"py-2 rounded-lg justify-self-center bg-gray-200\"\n                            >\n                                {showAllTasks\n                                    ? \"Click to show all unfinished tasks\"\n                                    : \"Click to show all tasks\"}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div>{renderTasks()}</div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}